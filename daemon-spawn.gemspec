# Generated by jeweler
# DO NOT EDIT THIS FILE DIRECTLY
# Instead, edit Jeweler::Tasks in Rakefile, and run the gemspec command
# -*- encoding: utf-8 -*-

Gem::Specification.new do |s|
  s.name = %q{daemon-spawn}
  s.version = "0.4.2"

  s.required_rubygems_version = Gem::Requirement.new(">= 0") if s.respond_to? :required_rubygems_version=
  s.authors = ["Alex Vollmer", "Seamus Abshere", "Emmanual Gomez", "Seth Falcon", "Woody Peterson", "Tilo Pr\303\274tz"]
  s.date = %q{2011-08-24}
  s.description = %q{With daemon-spawn you can start, stop and restart processes that run
    in the background. Processed are tracked by a simple PID file written
    to disk.}
  s.email = %q{alex.vollmer@gmail.com}
  s.extra_rdoc_files = [
    "README.rdoc"
  ]
  s.files = [
    ".autotest",
     ".gitignore",
     "History.txt",
     "Manifest.txt",
     "README.rdoc",
     "Rakefile",
     "VERSION",
     "daemon-spawn.gemspec",
     "lib/daemon_spawn.rb",
     "test/daemon_spawn_test.rb",
     "test/helper.rb",
     "test/multi_daemon_spawn_test.rb",
     "test/servers/deaf_server.rb",
     "test/servers/echo_server.rb",
     "test/servers/simple_server.rb",
     "test/servers/stubborn_server.rb",
     "test/servers/taps_server.rb"
  ]
  s.homepage = %q{http://github.com/alexvollmer/daemon-spawn}
  s.rdoc_options = ["--charset=UTF-8"]
  s.require_paths = ["lib"]
  s.rubyforge_project = %q{daemon-spawn}
  s.rubygems_version = %q{1.3.7}
  s.summary = %q{Daemon launching and management made dead simple}
  s.test_files = [
    "test/daemon_spawn_test.rb",
     "test/helper.rb",
     "test/multi_daemon_spawn_test.rb",
     "test/servers/deaf_server.rb",
     "test/servers/echo_server.rb",
     "test/servers/simple_server.rb",
     "test/servers/stubborn_server.rb",
     "test/servers/taps_server.rb"
  ]

  if s.respond_to? :specification_version then
    current_version = Gem::Specification::CURRENT_SPECIFICATION_VERSION
    s.specification_version = 3

    if Gem::Version.new(Gem::VERSION) >= Gem::Version.new('1.2.0') then
    else
    end
  else
  end
end

